"""
Django settings for HistoGlobe_admin_project project.

Generated by 'django-admin startproject' using Django 1.8.6.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os


BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
TEMPLATE_PATH = os.path.join(BASE_DIR, '')    # for some weird reason I don't quite get 'HistoGlobe_client' is already in the correct folder, so nothing to add here
STATIC_PATH = os.path.join(BASE_DIR, 'HistoGlobe_client')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '3b17md&t+j&&$$+o$)yt!(!8jm1-t0vi)m@=@2hq(-nacfybm5'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.gis',
    'djgeojson',

    'HistoGlobe_server'
)

MIDDLEWARE_CLASSES = (
    'chromelogger.DjangoMiddleware',   # to use my own logger
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # TODO: put Csrf back in and implement in on the client side
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware'
)

ROOT_URLCONF =      'HistoGlobe_admin_project.urls'

WSGI_APPLICATION =  'HistoGlobe_admin_project.wsgi.application'


# Template (HTML)
# in this case only one client side folder
# containing ONE html template and all static files

TEMPLATES = [
    {
      'BACKEND': 'django.template.backends.django.DjangoTemplates',
      'DIRS': [ TEMPLATE_PATH ],  # 'HistoGlobe_client' folder
      'APP_DIRS': True,
      'OPTIONS': {
        'context_processors': [
          'django.template.context_processors.debug',
          'django.template.context_processors.request',
          'django.contrib.auth.context_processors.auth',
          'django.contrib.messages.context_processors.messages',
          # 'django.core.context_processors.csrf'
        ],
      },
    },
  ]

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/HistoGlobe_client/'
STATICFILES_DIRS = (
    STATIC_PATH,
)


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
  'default': {
    'ENGINE':   'django.contrib.gis.db.backends.postgis',
    'NAME':     'hg_db',
    'USER':     'hg_usr',
    'PASSWORD': 'hg_pwd',
    'HOST':     'localhost',
    'PORT':     '',
  }
}

# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'
TIME_ZONE     = 'UTC'
USE_I18N      = True
USE_L10N      = True
USE_TZ        = True
